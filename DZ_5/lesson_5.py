'''Случайным образом программа выбирает целое число от 1 до 10 и предлагает пользователю его угадать.
Пользователь вводит число, а программа проверяет его и, если пользователь не угадал, то говорит больше или меньше.
После чего опять просит угадать. И так пока пользователь не угадает выбранное число
'''


import random
# count = 1
x = random.randint(1, 10)
a = -1
while a != x:
	a = int(input('ввести загаданное число: '))
	if a == x:
		print('Ты угадал число')
	elif a < x:
		print('Загаданное число больше.')
	else:
		print('Загаданное число меньше.')

#-------------------------------------------------------------------------------------------------------------

'''
Согласно древней индийской легенде создатель шахмат за своё изобретение попросил у раджи незначительную, на первый взгляд, награду: 
столько пшеничных зёрен, сколько окажется на шахматной доске, если на первую клетку положить одно зерно, на вторую — два зерна, 
на третью — четыре зерна, на четвёртую - восемь и т. д. 
Оказалось, что такого количества зерна нет на всей планете (оно равно 2**64 - 1 зерен). 
Посчитайте, начиная с какой клетки по счету, общее количество зерен, которое должен был бы отдать раджа изобретателю было больше 1 000 000 зерен
'''

i = 1 #зерно
cell = 1  #клетка
total = 0 #общая сумма зерен

while cell <= 64 and i <= 1000000:
    total += i
    i *= 2
    cell += 1

print('начиная с ' + str(cell) + ' клетки')

#----------------------------------------------------------------------------------------------------------------

#Напечатать таблицу Пифагора заданной конфигурации.

for k in range(0, 11):
    for i in range(0, 11):
        result = k * i
        if result < 10:
            empty = "  "
        else:
            if result < 100:
                empty  = " "
        if i == 0:
            if k == 0:
                print("    ", end = '')
            else:
                print("  ", k, end='')
        elif k == 0:
            print("  ", i, end='')
        else:
            print(empty, result, end = '')
    print()
#-------------------------------------------------------------------------------------------------